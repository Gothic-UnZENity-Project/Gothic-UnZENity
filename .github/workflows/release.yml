name: Gothic-UnZENity Release Job

on:
  release:
    types:
      - published

env:
  HVRversion: 'v2.9.2'

jobs:
  #########
  # BUILD #
  #########

  buildForAllPlatforms:
    name: Build Gothic-UnZENity for ${{ matrix.targetDevice }}
    runs-on: self-hosted
    strategy:
      fail-fast: true
      matrix:
        include:
          - targetPlatform: StandaloneWindows64
            targetDevice: Windows64
          - targetPlatform: Android
            targetDevice: Pico
          - targetPlatform: Android
            targetDevice: Quest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0
          clean: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Set Version
      - name: set Version
        run: |
          ref="${{ github.ref }}"
          tag="${ref#refs/tags/}"
          echo "Version: $tag"
          sed -i "s/bundleVersion: 0.1/bundleVersion: $tag/"  ProjectSettings/ProjectSettings.asset

      # Checkout and install HurricaneVR
      # PAT_ASSET_REPO_CHECKOUT expires once per year. An Admin need to create a new one as ORG_PAT if expired.
      - name: Check out HVR .unitypackage from private repository
        uses: actions/checkout@v4
        with:
          repository: Gothic-UnZENity-Project/asset-dependencies
          ref: main
          path: Checkout/AssetRepo
          token: ${{ secrets.PAT_ASSET_REPO_CHECKOUT }}
      - name: Copy HVR package
        run: |
          mkdir Assets/HuricaneVR;
          mv Checkout/AssetRepo/HVR/${{env.HVRversion}}/ Assets/HurricaneVR;

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          buildMethod: GUZ.VR.Editor.VRBuilderActions.Perform${{ matrix.targetDevice }}Build

      # Zip
      - name: zip
        run: cd Builds/${{ matrix.targetDevice }} && zip -r ${{ matrix.targetDevice }}.zip *
        
      # Release
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: Builds/${{ matrix.targetDevice }}/${{ matrix.targetDevice }}.zip
          asset_name: Gohic-UnZENity-${{ matrix.targetDevice }}.zip
          asset_content_type: application/zip
